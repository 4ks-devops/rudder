# generated by rudderc
# @name multiple_simple
# @version 1.0

bundle agent multiple_simple_technique {

  vars:
    "resources_dir"        string => "${this.promise_dirname}/resources";
    "args"                  slist => {};
    "report_param"         string => join("_", args);
    "full_class_prefix"    string => canonify("multiple_simple_technique_${report_param}");
    "class_prefix"         string => string_head("${full_class_prefix}", "1000");

  methods:
    # File absent: file_absent("/tmp")
    "${report_data.directive_id}_0"   usebundle => _method_reporting_context("File absent", "/tmp");
    "${report_data.directive_id}_0"   usebundle => file_absent("/tmp");

    # File check exists: file_check_exists("/tmp")
    "${report_data.directive_id}_1"   usebundle => _method_reporting_context("File check exists", "/tmp");
    "${report_data.directive_id}_1"   usebundle => file_check_exists("/tmp");

    # File present: file_present("/tmp")
    "${report_data.directive_id}_2"   usebundle => _method_reporting_context("File present", "/tmp");
    "${report_data.directive_id}_2"   usebundle => file_present("/tmp");

    # Directory absent: directory_absent("/tmp")
    "${report_data.directive_id}_3"   usebundle => _method_reporting_context("Directory absent", "/tmp");
    "${report_data.directive_id}_3"   usebundle => directory_absent("/tmp", "false");

    # Directory present: directory_present("/tmp")
    "${report_data.directive_id}_4"   usebundle => _method_reporting_context("Directory present", "/tmp");
    "${report_data.directive_id}_4"   usebundle => directory_present("/tmp");

    # Directory check exists: directory_check_exists("/tmp")
    "${report_data.directive_id}_5"   usebundle => _method_reporting_context("Directory check exists", "/tmp");
    "${report_data.directive_id}_5"   usebundle => directory_check_exists("/tmp");

}
@format=0

resource File(p)

File state permissions(u,g,m) {
}

global enum os {
  ubuntu,
  debian
}

enum os ~> family {
  ubuntu -> debian,
  debian -> debian
}

# Must be defined, needed by the compiler
enum boolean {
  true,
  false
}

# Must be defined, needed by the compiler
enum outcome {
  kept,
  repaired,
  error
}

resource ntp ()

ntp state configuration ()
{
  x="pouet"
  youpi = "youp${x}i"
  File("/tmp").permissions("root", "x$${root}i${youpi}2", "g+w") as outvar

  case {
    outvar =~ kept => File("/tmp").permissions("root", "root", "g+w"),
    outvar =~ repaired => File("/tmp").permissions("user", "user", "g+w"),
    outvar =~ error => File("/tmp").permissions("user", "user", "g+w")
  }
  case {
    ubuntu => File("/tmp").permissions("root", "root", "g+w"),
    os:debian => File("/tmp").permissions("user", "user", "g+w")
  }
}

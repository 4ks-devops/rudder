#!/bin/bash

set -e

FIRST_INSTALL="$1"
APACHE="$2"
APACHE_USER="$3"
APACHE_GROUP="$4"
APACHE_VHOSTDIR="$5"

BACKUP_DIR="/var/backups/rudder/"
LOG_FILE="/var/log/rudder/install/rudder-server-relay-$(date +%Y%m%d%H%M%S).log"

echo "$(date) - Starting rudder-server-relay post installation script" >> ${LOG_FILE}

# Create groups ans users before managing the services
echo -n "INFO: Creating users ..."
if ! getent group rudder > /dev/null; then
  groupadd --system rudder >> ${LOG_FILE}
fi

if ! getent group rudder-policy-reader > /dev/null; then
  groupadd --system rudder-policy-reader >> ${LOG_FILE}
  usermod -a -G rudder-policy-reader "${APACHE_USER}" >> ${LOG_FILE}
fi

if ! getent passwd rudder-relayd >/dev/null; then
  useradd --system --shell /bin/false --gid rudder --home-dir /var/rudder --comment "Rudder relayd,,," rudder-relayd >> ${LOG_FILE}
fi

if ! getent passwd rudder >/dev/null; then
  useradd --system --shell /bin/false --gid rudder --home-dir /var/rudder --comment "Rudder,,," rudder >> ${LOG_FILE}
fi
echo " Done"

# Always reload systemd (in case we changed the unit file)
echo -n "INFO: Configuring systemd services..."
systemctl daemon-reload >> ${LOG_FILE}
if [ "${FIRST_INSTALL}" -eq 1 ]; then
  systemctl enable rudder-relayd >> ${LOG_FILE}
fi

systemctl stop "${APACHE}" >> ${LOG_FILE} || true

systemctl stop rudder-relayd >> ${LOG_FILE} || true
echo " Done"

# share directory with rudder-policy-reader
chgrp rudder-policy-reader /var/rudder/share
chmod g+s-w /var/rudder/share

# change some directory to rudder owner
mkdir -p /var/rudder/configuration-repository/shared-files
chown -R root:rudder /var/rudder/configuration-repository/shared-files
chmod 2750 /var/rudder/configuration-repository/shared-files
chmod -R u+rwX,g+rX /var/rudder/configuration-repository/shared-files
chown -R rudder-relayd:rudder /var/rudder/shared-files
chmod 770 /var/rudder/shared-files
chmod 755 /var/rudder/inventories

# Make conf readable by relayd
chgrp -R rudder /opt/rudder/etc/relayd
chmod 750 /opt/rudder/etc/relayd
chmod 640 /opt/rudder/etc/relayd/main.conf
chmod 640 /opt/rudder/etc/relayd/logging.conf

for dir in /var/rudder/inventories/incoming /var/rudder/inventories/failed /var/rudder/inventories/accepted-nodes-updates /var/rudder/reports/incoming /var/rudder/reports/failed
do
  chmod 770 ${dir}
  chown ${APACHE_USER}:rudder ${dir}
done

# Setup password files for inventory reception WebDAV access
for passwdfile in /opt/rudder/etc/htpasswd-webdav-initial /opt/rudder/etc/htpasswd-webdav
do
  htpasswd -bc ${passwdfile} rudder rudder >> ${LOG_FILE} 2>&1
done

# Previous HTTPS key and cert
if [ -f /opt/rudder/etc/ssl/rudder.crt ]; then
  mv /opt/rudder/etc/ssl/rudder.crt "${BACKUP_DIR}/rudder-`date +%Y%m%d`.crt"
fi
if [ -f /opt/rudder/etc/ssl/rudder.key ]; then
  mv /opt/rudder/etc/ssl/rudder.key "${BACKUP_DIR}/rudder-`date +%Y%m%d`.key"
fi

# we now use agent.cert and localhost.priv for HTTPS too

# put agent certificate in ca.cert if it doesn't exist (we need at least on certificate there)
if [ ! -f /opt/rudder/etc/ssl/ca.cert ]; then
  cp /opt/rudder/etc/ssl/agent.cert /opt/rudder/etc/ssl/ca.cert
fi

if [ ! -f /var/rudder/lib/ssl/nodescerts.pem ]; then
  touch /var/rudder/lib/ssl/nodescerts.pem
  touch /var/rudder/lib/ssl/allnodescerts.pem
fi

# Remove wsgi conf from vhost
sed -i '/^Set up a WSGI serving process/d' /etc/${APACHE_VHOSTDIR}/rudder.conf
sed -i '/^WSGI/d' /etc/${APACHE_VHOSTDIR}/rudder.conf

echo -n "INFO: Starting services..."
systemctl start rudder-relayd >> ${LOG_FILE}
systemctl start "${APACHE}" >> ${LOG_FILE}
echo " Done"

echo "INFO: rudder-server-relay setup complete."
# Only output this notice during initial installation
if [ "${FIRST_INSTALL}" -eq 1 ]; then
  uuid_file="/opt/rudder/etc/uuid.hive"
  if [ -f "${uuid_file}" ]; then
    uuid=$(cat ${uuid_file})
    if [ "${uuid}" != "root" ]; then
      echo ""
      echo "*****************************************************************************************"
      echo "INFO: Now run on your root server:                                                             "
      echo "INFO:   'rudder server node-to-relay ${uuid}"
      echo "INFO: Please look at the documentation for details (Section 'Relay servers')           "
      echo "*****************************************************************************************"
    fi
  else # if for some reason there is no uuid here (should not happen)
    echo ""
    echo "*****************************************************************************************"
    echo "INFO: * If you are installing a root server, configuration is automatically done         "
    echo "INFO: * If you are installing a simple relay, run:                                       "
    echo "INFO:   'rudder server node-to-relay <your uuid>'          "
    echo "INFO:   on your root server to complete this node transition to a relay server.          "
    echo "INFO:   Please look at the documentation for details (Section 'Relay servers')           "
    echo "*****************************************************************************************"
  fi
fi

echo "$(date) - Ending rudder-server-relay post installation script" >> ${LOG_FILE}


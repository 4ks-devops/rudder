# generated by rudderc
# @name condition andor
# @version 1.0

function Condition-Andor-Technique {
  [CmdletBinding()]
  param (
    [Parameter(Mandatory=$False)] [Switch] $AuditOnly,
    [Parameter(Mandatory=$True)]  [String] $ReportId,
    [Parameter(Mandatory=$True)]  [String] $TechniqueName
  )

  $LocalClasses = New-ClassContext
  $ResourcesDir = $PSScriptRoot + "\resources"
  $Condition = "(debian_family -or linux -or ubuntu) -and windows -or linux -and ubuntu"
  if (Evaluate-Class $Condition $LocalClasses $SystemClasses) {
    $LocalClasses = Merge-ClassContext $LocalClasses $(Kernel-Module-Loaded -ComponentName "Kernel-Module-Loaded" -ReportId $ReportId -AuditOnly $AuditOnly -TechniqueName $TechniqueName).get_item("classes")
  }
  else {
    _rudder_common_report_na -ComponentName "Kernel-Module-Loaded" -ComponentKey "Name" -Message "Not-Applicable" -ReportId $ReportId -AuditOnly $AuditOnly -TechniqueName $TechniqueName
  }
  $LocalClasses = Merge-ClassContext $LocalClasses $(-Name "Test" -Message "Skipping-Method-'Kernel-Module-Loaded'-With-Key-Parameter-'Name'-Since-Condition-'(debian-Family--Or-Linux--Or-Ubuntu)--And-Windows--Or-Linux--And-Ubuntu'-Is-Not-Reached" -Message "Canonify("${class-Prefix}-Kernel-Module-Loaded-"Test"")" -Message "Canonify("${class-Prefix}-Kernel-Module-Loaded-"Test"")" -Message "@{args}").get_item("classes")
}

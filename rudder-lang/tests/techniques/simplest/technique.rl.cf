# generated by rudderc
# @name simplest
# @version 1.0

bundle agent simplest_technique {

  vars:
    "resources_dir"        string => "${this.promise_dirname}/resources";
    "args"                  slist => {};
    "report_param"         string => join("_", args);
    "full_class_prefix"    string => canonify("simplest_technique_${report_param}");
    "class_prefix"         string => string_head("${full_class_prefix}", "1000");

  methods:
    # File absent:
    # 
    #   file("tmp").absent() as file_absent_tmp
    # 
    "${report_data.directive_id}_0"   usebundle => _method_reporting_context("File absent", "tmp"),
                                             if => concat("debian_family");
    "${report_data.directive_id}_0"   usebundle => file_absent("tmp"),
                                             if => concat("debian_family");
    "${report_data.directive_id}_0"   usebundle => _classes_noop(canonify("${class_prefix}_file_absent_tmp")),
                                         unless => concat("debian_family");
    "${report_data.directive_id}_0"   usebundle => log_rudder("Skipping method 'File absent' with key parameter 'tmp' since condition 'debian_family' is not reached", "tmp", canonify("${class_prefix}_file_absent_tmp"), canonify("${class_prefix}_file_absent_tmp"), @{args}),
                                         unless => concat("debian_family");

}